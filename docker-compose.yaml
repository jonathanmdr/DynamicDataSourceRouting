version: "3.8"

services:

  master-db:
    image: docker.io/bitnami/mysql:8.0
    container_name: master-db
    restart: "no"
    ports:
      - "3306:3306"
    networks:
      - multi-data-sources
    volumes:
      - mysql-data:/bitnami/mysql/data
    environment:
      - MYSQL_REPLICATION_MODE=master
      - MYSQL_REPLICATION_USER=repl_user
      - MYSQL_USER=master
      - MYSQL_DATABASE=billionaires
      - ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_ROOT_PASSWORD=root
    healthcheck:
      test: ["CMD", "/opt/bitnami/scripts/mysql/healthcheck.sh"]
      interval: 15s
      timeout: 5s
      retries: 6

  replica-db:
    image: docker.io/bitnami/mysql:8.0
    container_name: replica-db
    restart: "no"
    ports:
      - "3307:3306"
    networks:
      - multi-data-sources
    depends_on:
      - master-db
    environment:
      - MYSQL_REPLICATION_MODE=slave
      - MYSQL_REPLICATION_USER=repl_user
      - MYSQL_USER=replica
      - MYSQL_DATABASE=billionaires
      - MYSQL_MASTER_HOST=master-db
      - MYSQL_MASTER_PORT_NUMBER=3306
      - MYSQL_MASTER_ROOT_PASSWORD=root
      - ALLOW_EMPTY_PASSWORD=yes
    healthcheck:
      test: ["CMD", "/opt/bitnami/scripts/mysql/healthcheck.sh"]
      interval: 15s
      timeout: 5s
      retries: 6

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    restart: "no"
    ports:
      # Agent Zipkin Compact
      - "5775:5775/udp"
      # Agent Jaeger Compact
      - "6831:6831/udp"
      # Agent Jaeger Binary
      - "6832:6832/udp"
      # Agent Configuration HTTP
      - "5778:5778"
      # Web Interface
      - "16686:16686"
      # Collector HTTP
      - "14268:14268"
      # Collector gRPC
      - "14250:14250"
    environment:
      - METRICS_STORAGE_TYPE=prometheus
      - PROMETHEUS_SERVER_URL=http://prometheus:9090
    networks:
      - multi-data-sources

  prometheus:
    image: prom/prometheus:v2.42.0
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus-configuration.yaml
    ports:
      - "9090:9090"
    volumes:
      - prometheus-data:/prometheus
      - ./agents/prometheus:/etc/prometheus
    networks:
      - multi-data-sources

  grafana:
    image: grafana/grafana-oss:9.3.6
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=localhost
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - multi-data-sources

networks:
  multi-data-sources:
    driver: bridge

volumes:
  mysql-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
